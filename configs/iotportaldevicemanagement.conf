server {
    listen 80;
    listen [::]:80;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen  443 ssl;
    listen  [::]:443 ssl ipv6only=on;
    keepalive_timeout   70;

    ssl_protocols  TLSv1.2 TLSv1.3;
    ssl_ciphers  ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384;
    ssl_certificate /certificates/nginx.crt;
    ssl_certificate_key /certificates/nginx.key;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "frame-ancestors 'self';";

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;

    location / {
        # reverse proxy for web server
        proxy_pass http://web-upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location ~ /(api|sanctum|verifyEmail)/ {
       root /var/www/html/public;
       index index.php index.html index.htm;
       try_files $uri $uri/ /index.php$is_args$args;
    }

    # pass the PHP scripts to FastCGI server listening on upstream:9000
    location ~ \.php$ {
        root           /var/www/html/public;
        fastcgi_pass   api-upstream;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny  all;
    }
}
